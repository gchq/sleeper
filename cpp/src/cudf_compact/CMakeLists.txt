include(GenerateExportHeader)

add_library(
  cudf_compact
  cudf_compact.cpp
  cudf_utils.cpp
  filters.cpp
  format_helper.cpp
  parquet_types.cpp
  ranges.cu
  s3/s3_sink.cpp
  s3/s3_utils.cpp
  ../../include/cudf_compact/common_types.hpp
  ../../include/cudf_compact/cudf_compact.hpp
  ../../include/cudf_compact/cudf_utils.hpp
  ../../include/cudf_compact/filters.hpp
  ../../include/cudf_compact/format_helper.hpp
  ../../include/cudf_compact/metadata.hpp
  ../../include/cudf_compact/parquet_types.h
  ../../include/cudf_compact/ranges.hpp
  ../../include/cudf_compact/s3/s3_sink.hpp
  ../../include/cudf_compact/s3/s3_utils.hpp)

add_library(gpu_compact::cudf_compact ALIAS cudf_compact)
target_link_libraries(cudf_compact PRIVATE fmt::fmt spdlog::spdlog aws-cpp-sdk-s3)
target_link_libraries(cudf_compact PUBLIC cudf::cudf thrift::thrift)
target_link_libraries(cudf_compact PRIVATE gpu_compact_options gpu_compact_warnings)
target_include_directories(cudf_compact ${WARNING_GUARD} PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
                                                                $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}/include>)
target_compile_features(cudf_compact PUBLIC cxx_std_20 cuda_std_20)
set_target_properties(cudf_compact PROPERTIES CUDA_ARCHITECTURES "75")
target_link_options(
  cudf_compact
  BEFORE
  INTERFACE
  "LINKER:--copy-dt-needed-entries")

set_source_files_properties(
  ranges.cu PROPERTIES COMPILE_OPTIONS "--expt-relaxed-constexpr;--expt-extended-lambda;-Xfatbin;-compress-all;-ccbin=${CMAKE_C_COMPILER}")

set_target_properties(
  cudf_compact
  PROPERTIES VERSION ${PROJECT_VERSION}
             CXX_VISIBILITY_PRESET hidden
             VISIBILITY_INLINES_HIDDEN YES)

generate_export_header(cudf_compact EXPORT_FILE_NAME ${PROJECT_BINARY_DIR}/include/gpu_compact/cudf_compact_export.hpp)

if(NOT BUILD_SHARED_LIBS)
  target_compile_definitions(cudf_compact PUBLIC CUDF_COMPACT_STATIC_DEFINE)
endif()
