on:
  workflow_call:
    inputs:
      mavenCmd:
        default: none
        required: false
        type: string
      pushImages:
        default: false
        required: false
        type: boolean
      context:
        required: true
        type: string
      pushTag:
        required: true
        type: string
      packageName:
        required: true
        type: string
      platforms:
        required: true
        type: string
      buildUrl:
        required: true
        type: string

env:
  DEPENDENCIES_IMAGE: localhost:5000/sleeper-dependencies:current

jobs:
  build:
    name: Build ${{ inputs.packageName }}
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Delete huge unnecessary tools folder
        run: |
          rm -rf /opt/hostedtoolcache
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: java/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Resolve dependencies
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Dmaven.repo.local=.m2/repository
        working-directory: ./java
      - name: Maven build
        if: inputs.mavenCmd != 'none'
        run: ${{ inputs.mavenCmd }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Download artifacts from previous workflows
        uses: actions/download-artifact@v3
      - name: Load dependencies image
        run: docker load --input dependencies-image/dependencies-image.tar
      - name: Expose dependencies image to Docker Buildx via local registry
        run: docker push ${{ env.DEPENDENCIES_IMAGE }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          push: ${{ inputs.pushImages }}
          sbom: false
          provenance: false
          tags: ${{ inputs.pushTag }}
          platforms: ${{ inputs.platforms }}
          build-args: DEPENDENCIES_IMAGE=${{ env.DEPENDENCIES_IMAGE }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ inputs.buildUrl }}
      - name: Delete old images
        if: ${{ inputs.pushImages }}
        working-directory: ./java/build
        run: |
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> delete.properties
          echo "organization=${{ github.repository_owner }}" >> delete.properties
          echo "packageNames=${{ inputs.packageName }}" >> delete.properties
          echo "ignoreTagsPattern=^latest$" >> delete.properties
          echo "keepMostRecent=4" >> delete.properties
          mvn compile exec:java -q -e -Dexec.mainClass=sleeper.build.github.api.containers.DeleteGHCRVersions \
            -Dmaven.repo.local=../.m2/repository \
            -Dexec.args=delete.properties
