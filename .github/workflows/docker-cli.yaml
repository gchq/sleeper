on:
  workflow_call:
    inputs:
      pushImages:
        default: false
        required: false
        type: boolean

env:
  DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8
  DEPENDENCIES_IMAGE: localhost:5000/sleeper-dependencies:current
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  setup:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Plan build
        id: plan
        run: |
          ./.github/scripts/planCliBuild.sh \
            "${{ github.repository_owner }}" \
            "${{ github.ref }}"
      - name: Build Docker dependencies
        uses: docker/build-push-action@v4
        with:
          context: ./scripts/cli/dependencies
          push: true
          sbom: false
          provenance: false
          tags: ${{ env.DEPENDENCIES_IMAGE }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Pull dependencies image from registry
        run: docker pull ${{ env.DEPENDENCIES_IMAGE }}
      - name: Save dependencies image to tarball
        run: docker save ${{ env.DEPENDENCIES_IMAGE }} --output /tmp/dependencies-image.tar
      - name: Upload dependencies image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependencies-image
          path: /tmp/dependencies-image.tar
    outputs:
      builderTag: ${{ steps.plan.outputs.builderTag }}
      envTag: ${{ steps.plan.outputs.envTag }}
      deployTag: ${{ steps.plan.outputs.deployTag }}
      builderPackage: ${{ steps.plan.outputs.builderPackage }}
      envPackage: ${{ steps.plan.outputs.envPackage }}
      deployPackage: ${{ steps.plan.outputs.deployPackage }}
      platforms: ${{ env.DOCKER_PLATFORMS }}
      buildUrl: ${{ env.BUILD_URL }}
  builder:
    needs: setup
    uses: ./.github/workflows/docker-cli-image.yaml
    with:
      pushImages: ${{ inputs.pushImages }}
      context: ./scripts/cli/builder
      pushTag: ${{ needs.setup.outputs.builderTag }}
      packageName: ${{ needs.setup.outputs.builderPackage }}
      platforms: ${{ needs.setup.outputs.platforms }}
      buildUrl: ${{ needs.setup.outputs.buildUrl }}
  environment:
    needs: setup
    uses: ./.github/workflows/docker-cli-image.yaml
    with:
      mavenCmd: ./scripts/cli/environment/buildMaven.sh package -Pquick -DskipRust --batch-mode -Dmaven.repo.local=../.m2/repository
      pushImages: ${{ inputs.pushImages }}
      context: ./scripts/cli/environment
      pushTag: ${{ needs.setup.outputs.envTag }}
      packageName: ${{ needs.setup.outputs.envPackage }}
      platforms: ${{ needs.setup.outputs.platforms }}
      buildUrl: ${{ needs.setup.outputs.buildUrl }}
