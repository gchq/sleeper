name: Docker Tests
on:
  pull_request:
    paths:
      - 'java/**/Dockerfile'
      - '.github/workflows/docker-tests.yaml'

env:
  RUST_BUILD_IMAGE_X86_64: "ghcr.io/gchq/sleeper-rust-builder-x86_64-sccache:latest"
  RUST_BUILD_IMAGE_AARCH64: "ghcr.io/gchq/sleeper-rust-builder-aarch64-sccache:latest"
  SCCACHE_GHA_ENABLED: "true"
  SSCACHE_CACHE_SIZE: "2G"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Resolve dependencies
        run: mvn de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Dmaven.repo.local=${{ runner.temp }}/.m2/repository
        working-directory: ./java
      - name: Build with Maven
        run: mvn --batch-mode install -Pquick -T 1C -Dmaven.repo.local=${{ runner.temp }}/.m2/repository
        working-directory: ./java
      - name: Copy build output
        working-directory: ./scripts/build
        run: ./copyBuildOutput.sh
      - name: Build compaction task Docker image
        working-directory: ./scripts/docker/compaction-job-execution
        run: docker build -t compaction-job-execution:test .
      - name: Docker image tests
        working-directory: ./java
        run: mvn verify -PsystemTest -DskipRust=true -pl clients "-DrunIT=DockerImageTest*" -Dmaven.repo.local=${{ runner.temp }}/.m2/repository
