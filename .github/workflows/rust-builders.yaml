name: Rust Builders
on:
  workflow_call:
    inputs:
      pushImages:
        default: false
        required: false
        type: boolean

env:
  DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8
  BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Compute image paths
        id: images
        run: |
          if [ "${{ inputs.pushImages }}" = true ] ; then
            echo "x86_64=ghcr.io/gchq/sleeper-rust-builder-x86_64:latest" >> "$GITHUB_OUTPUT"
            echo "aarch64=ghcr.io/gchq/sleeper-rust-builder-aarch64:latest" >> "$GITHUB_OUTPUT"
          else
            echo "x86_64=localhost:5000/sleeper-rust-builder-x86_64:latest" >> "$GITHUB_OUTPUT"
            echo "aarch64=localhost:5000/sleeper-rust-builder-aarch64:latest" >> "$GITHUB_OUTPUT"
          fi
      - name: Build x86_64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rust/builders/x86_64
          tags: ${{ steps.images.outputs.x86_64 }}
          sbom: false
          provenance: false
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build aarch64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rust/builders/aarch64
          tags: ${{ steps.images.outputs.aarch64 }}
          sbom: false
          provenance: false
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Pull x86_64 image
        run: docker pull ${{ steps.images.outputs.x86_64 }}
      - name: Pull aarch64 image
        run: docker pull ${{ steps.images.outputs.aarch64 }}
      - name: Build x86_64 sccache Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rust/builders/x86_64
          tags: ghcr.io/gchq/sleeper-rust-builder-x86_64-sccache:latest
          build-args: BASE_IMAGE=${{ steps.images.outputs.x86_64 }}
          sbom: false
          provenance: false
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ inputs.pushImages }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Build aarch64 sccache Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rust/builders/aarch64
          tags: ghcr.io/gchq/sleeper-rust-builder-aarch64-sccache:latest
          build-args: BASE_IMAGE=${{ steps.images.outputs.aarch64 }}
          sbom: false
          provenance: false
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ inputs.pushImages }}
          labels: |
            git-commit=${{ github.sha }}
            build-url=${{ env.BUILD_URL }}
      - name: Delete old images
        if: ${{ inputs.pushImages }}
        working-directory: ./java/build
        run: |
          echo "token=${{ secrets.GITHUB_TOKEN }}" >> delete.properties
          echo "organization=${{ github.repository_owner }}" >> delete.properties
          echo "packageNames=sleeper-rust-builder-x86_64,sleeper-rust-builder-aarch64,sleeper-rust-builder-x86_64-sccache,sleeper-rust-builder-aarch64-sccache" >> delete.properties
          echo "ignoreTagsPattern=^latest$" >> delete.properties
          echo "keepMostRecent=4" >> delete.properties
          mvn compile exec:java -q -e -Dexec.mainClass=sleeper.build.github.api.containers.DeleteGHCRVersions \
            -Dmaven.repo.local=../.m2/repository \
            -Dexec.args=delete.properties
