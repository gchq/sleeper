<!--
  ~ Copyright 2022-2024 Crown Copyright
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.1.0 http://maven.apache.org/xsd/assembly-2.1.0.xsd">
    <id>bin</id>
    <formats>
        <format>${distribution.format}</format>
    </formats>
    <includeBaseDirectory>false</includeBaseDirectory>

    <fileSets>
        <!-- Deployment scripts -->
        <fileSet>
            <directory>${project.basedir}/../../scripts/deploy</directory>
            <outputDirectory>scripts/deploy</outputDirectory>
            <excludes>
                <exclude>buildAndDeploy.sh</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../../scripts/utility</directory>
            <outputDirectory>scripts/utility</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../../scripts/templates</directory>
            <outputDirectory>./scripts/templates</outputDirectory>
        </fileSet>
        <!-- Example configuration -->
        <fileSet>
            <directory>${project.basedir}/../../example</directory>
        </fileSet>
        <!-- Docs -->
        <fileSet>
            <directory>${project.basedir}/../../docs</directory>
        </fileSet>
        <!-- Docker files -->
        <fileSet>
            <directory>${project.basedir}/docker/lambda</directory>
            <outputDirectory>scripts/docker/lambda</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../compaction/compaction-job-execution/docker</directory>
            <outputDirectory>scripts/docker/compaction-job-execution</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../compaction/compaction-gpu/docker</directory>
            <outputDirectory>scripts/docker/compaction-gpu</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../ingest/ingest-runner/docker</directory>
            <outputDirectory>scripts/docker/ingest</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../bulk-import/bulk-import-eks/docker/eks</directory>
            <outputDirectory>scripts/docker/bulk-import-runner</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../bulk-import/bulk-import-eks/target/spark</directory>
            <outputDirectory>scripts/docker/bulk-import-runner/spark</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>${project.basedir}/../bulk-import/bulk-import-runner/docker/emr-serverless</directory>
            <outputDirectory>scripts/docker/bulk-import-runner-emr-serverless</outputDirectory>
            <excludes>
                <exclude>*.jar</exclude>
            </excludes>
        </fileSet>
    </fileSets>
    <files>
        <file>
            <source>${project.basedir}/../../README.md</source>
        </file>
        <file>
            <source>./target/classes/version.txt</source>
            <outputDirectory>scripts/templates</outputDirectory>
        </file>
        <file>
            <source>
                ${project.basedir}/../ingest/ingest-runner/target/ingest-runner-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/docker/ingest</outputDirectory>
            <destName>ingest.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../bulk-import/bulk-import-runner/target/bulk-import-runner-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/docker/bulk-import-runner</outputDirectory>
            <destName>bulk-import-runner.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../bulk-import/bulk-import-runner/target/bulk-import-runner-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/docker/bulk-import-runner-emr-serverless</outputDirectory>
            <destName>bulk-import-runner.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../compaction/compaction-job-execution/target/compaction-job-execution-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/docker/compaction-job-execution/</outputDirectory>
            <destName>compaction-job-execution.jar</destName>
        </file>
        <file>
            <source>
                ${maven.multiModuleProjectDirectory}/../cpp/CMakeLists.txt
            </source>
            <outputDirectory>scripts/docker/compaction-gpu/</outputDirectory>
            <destName>CMakeLists.txt</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../compaction/compaction-job-creation-lambda/target/compaction-job-creation-lambda-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>lambda-jobSpecCreationLambda-${project.version}.jar</destName>
        </file>
        <file>
            <source>${project.basedir}/../garbage-collector/target/garbage-collector-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>lambda-garbagecollector-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../splitter/splitter-lambda/target/splitter-lambda-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>lambda-splitter-${project.version}.jar</destName>
        </file>
        <file>
            <source>${project.basedir}/../query/query-lambda/target/query-lambda-${project.version}-utility.jar</source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>query-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../compaction/compaction-task-creation/target/compaction-task-creation-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>runningjobs-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../ingest/ingest-starter/target/ingest-starter-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>ingest-starter-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../ingest/ingest-batcher-submitter/target/ingest-batcher-submitter-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>ingest-batcher-submitter-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../ingest/ingest-batcher-job-creator/target/ingest-batcher-job-creator-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>ingest-batcher-job-creator-${project.version}.jar</destName>
        </file>
        <file>
            <source>${project.basedir}/../metrics/target/metrics-${project.version}-utility.jar</source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>metrics-${project.version}.jar</destName>
        </file>
        <file>
            <source>${project.basedir}/../athena/target/athena-${project.version}-utility.jar</source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>athena-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../bulk-import/bulk-import-starter/target/bulk-import-starter-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>bulk-import-starter-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../bulk-import/bulk-import-runner/target/bulk-import-runner-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>bulk-import-runner-${project.version}.jar</destName>
        </file>
        <file>
            <source>${project.basedir}/../clients/target/clients-${project.version}-utility.jar</source>
            <outputDirectory>scripts/jars</outputDirectory>
        </file>
        <file>
            <source>${project.basedir}/../cdk/target/cdk-${project.version}-utility.jar</source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>cdk-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../cdk-custom-resources/target/cdk-custom-resources-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>cdk-custom-resources-${project.version}.jar</destName>
        </file>
        <file>
            <source>
                ${project.basedir}/../statestore-lambda/target/statestore-lambda-${project.version}-utility.jar
            </source>
            <outputDirectory>scripts/jars</outputDirectory>
            <destName>statestore-lambda-${project.version}.jar</destName>
        </file>
    </files>
</assembly>