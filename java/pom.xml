<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022-2025 Crown Copyright
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>sleeper</groupId>
    <artifactId>aws</artifactId>
    <packaging>pom</packaging>
    <version>0.33.0-SNAPSHOT</version>

    <modules>
        <module>core</module>
        <module>ingest</module>
        <module>parquet</module>
        <module>clients</module>
        <module>statestore</module>
        <module>statestore-committer-core</module>
        <module>statestore-lambda</module>
        <module>configuration</module>
        <module>foreign-bridge</module>
        <module>compaction</module>
        <module>query</module>
        <module>system-test</module>
        <module>garbage-collector</module>
        <module>partitions</module>
        <module>cdk</module>
        <module>sketches</module>
        <module>athena</module>
        <module>common</module>
        <module>bulk-import</module>
        <module>bulk-export</module>
        <module>cdk-custom-resources</module>
        <module>cdk-environment</module>
        <module>metrics</module>
        <module>distribution</module>
        <module>trino</module>
        <module>build</module>
        <module>build-uptime-lambda</module>
        <module>example-iterators</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <!-- Scala is just used for Spark -->
        <scala.version>2.12</scala.version>
        <scala.minor.version>2.12.20</scala.minor.version>
        <!--
        The Spark and Hadoop versions must match the EMR release we use for bulk import.
        See the versions listed in the documentation:
        https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html
        For the EMR release used in Sleeper, check the property sleeper.default.bulk.import.emr.release.label.
        -->
        <spark.version>3.5.5</spark.version>
        <hadoop.version>3.4.1</hadoop.version>
        <parquet.version>1.15.2</parquet.version>
        <joom.spark.platform.version>0.4.10</joom.spark.platform.version>
        <!-- The version of Arrow should match the version used by Spark, under spark-sql-api. -->
        <arrow.version>12.0.1</arrow.version>
        <!--
        Spark Catalyst uses an old version of DataSketches. This must match the version declared there, as
        it is provided in EMR.
        -->
        <datasketches.version>3.3.0</datasketches.version>
        <!--
        Hadoop uses an old version of wildfly-openssl in hadoop-aws.
        We upgraded to the latest version from wildfly-openssl 1.1.3.Final.
        -->
        <wildfly-openssl.version>2.2.5.Final</wildfly-openssl.version>
        <wildfly-common.version>2.0.1</wildfly-common.version>
        <!--
        Hadoop uses an old version of Woodstox in hadoop-common.
        We upgraded to the latest version from woodstox-core 5.4.0.
        -->
        <woodstox.version>7.1.1</woodstox.version>
        <woodstox.stax2.version>4.2.2</woodstox.stax2.version>
        <!-- Spark 3.3.1 uses an old version of Apache Ivy with vulnerabilities. Managed from 2.5.1. -->
        <ivy.version>2.5.3</ivy.version>
        <!--
        Snappy is used by both hadoop-client and parquet-hadoop.
        We were getting multiple versions added to the classpath, and they both have vulnerabilities.
        -->
        <snappy.version>1.1.10.8</snappy.version>
        <!-- Parquet uses Aircompressor. -->
        <aircompressor.version>2.0.2</aircompressor.version>
        <!-- Hadoop declares an old version of Protobuf with vulnerabilities. -->
        <protobuf.version>4.32.0</protobuf.version>
        <!-- Hadoop declares an old version of Nimbus with vulnerabilities. -->
        <nimbus-jose-jwt.version>10.4.2</nimbus-jose-jwt.version>
        <!-- Spark declares an old version of Avro with vulnerabilities. -->
        <avro.version>1.12.0</avro.version>
        <!-- Hadoop declares an old version of Kerby with vulnerabilities. -->
        <kerby.version>2.1.0</kerby.version>
        <!-- Hadoop declares an old version of dnsjava with vulnerabilities. -->
        <dnsjava.version>3.6.3</dnsjava.version>
        <!-- Spark (via Avro) declares an old version of XZ with vulnerabilities. -->
        <xz.version>1.10</xz.version>
        <!-- Spark Platform declares an old version of OkHttp with vulnerabilities. -->
        <okhttp3.version>5.1.0</okhttp3.version>
        <!--
        OkHttp, as a dependency of Spark, declares an old version of Kotlin with vulnerabilities.
        Managed from a conflict.
        -->
        <kotlin.version>2.2.10</kotlin.version>
        <!--
        OkHttp, as a dependency of Spark, declares an old version of Okio with vulnerabilities.
        Managed from a conflict within Spark, and with Trino.
        -->
        <okio.version>3.16.0</okio.version>
        <!--
        Spark declares an old version of RoaringBitmap with vulnerabilities. We have upgraded the version
        ahead of the Spark version to address detected vulnerabilities.
        -->
        <roaringbitmap.version>1.3.0</roaringbitmap.version>
        <!-- Trino testing declares an old version. Managed from 1.2.3. -->
        <!-- jungrapht-visualization-samples also declares an old version, which is a dependency of the build module. -->
        <logback.version>1.5.18</logback.version>
        <aws-java-sdk-v2.version>2.33.2</aws-java-sdk-v2.version>
        <!--
        EMR Serverless has a version of the AWS SDK built into it that we can't easily change.
        At the time of writing it's not compatible with the latest version.
        We're getting different versions mixed together in the classpath and seeing the following error when
        BulkImportJobDriver.start tries to create an SqsClient:
        java.lang.NoSuchFieldError: AWS_AUTH_SCHEME_PREFERENCE
        at software.amazon.awssdk.awscore.auth.AuthSchemePreferenceResolver.fromSystemSetting(AuthSchemePreferenceResolver.java:75)
        The old version of the library is coming from this file in the EMR Serverless Docker image:
        /usr/share/aws/emr/serverless-goodies/lib/emr-serverless-spark-goodies-2.19.0.jar
        To find the version below, we logged out the code location for the class in the Spark
        driver, then copied that file out of the Docker image, unzipped the jar, and decompiled the VersionInfo class.
        -->
        <aws-java-sdk-v2.bulk-import.version>2.31.16</aws-java-sdk-v2.bulk-import.version>
        <aws-crt.version>0.38.11</aws-crt.version>
        <aws-lambda-java-events.version>3.16.1</aws-lambda-java-events.version>
        <aws-lambda-java-core.version>1.4.0</aws-lambda-java-core.version>
        <aws-lambda-powertools.version>2.3.0</aws-lambda-powertools.version>
        <commons-lang3.version>3.18.0</commons-lang3.version>
        <commons-codec.version>1.19.0</commons-codec.version>
        <commons-io.version>2.20.0</commons-io.version>
        <commons-configuration.version>2.12.0</commons-configuration.version>
        <commons-compress.version>1.28.0</commons-compress.version>
        <commons-text.version>1.14.0</commons-text.version>
        <janino.version>3.1.12</janino.version>
        <commons-net.version>3.12.0</commons-net.version>
        <commons-fileupload.version>1.6.0</commons-fileupload.version>
        <commons-logging.version>1.3.5</commons-logging.version>
        <commons-beanutils.version>1.11.0</commons-beanutils.version>
        <httpcore4.version>4.4.16</httpcore4.version>
        <httpclient4.version>4.5.14</httpclient4.version>
        <httpclient5.version>5.5</httpclient5.version>
        <jaxb.version>2.3.1</jaxb.version>
        <jline.version>3.30.5</jline.version>
        <jetbrains-annotations.version>26.0.2-1</jetbrains-annotations.version>
        <paranamer.version>2.8.3</paranamer.version>
        <zstd-jni.version>1.5.7-4</zstd-jni.version>
        <airlift.units.version>1.10</airlift.units.version>
        <airlift.slice.version>2.3</airlift.slice.version>
        <!-- Trino and its dependencies declare different versions of Airlift. -->
        <airlift.version>241</airlift.version>
        <!-- Trino and its dependencies declare different versions of OpenTelemetry. -->
        <opentelemetry.version>1.53.0</opentelemetry.version>
        <guice.version>7.0.0</guice.version>
        <jol.version>0.17</jol.version>
        <zookeeper.version>3.9.4</zookeeper.version>
        <jackson.version>2.20.0</jackson.version>
        <jackson.annotations.version>2.20</jackson.annotations.version>
        <!-- Trino integration uses a different version of JJWT, this is the version used in the build module -->
        <jjwt.build.version>0.13.0</jjwt.build.version>
        <facebook.collections.version>0.1.32</facebook.collections.version>
        <!-- Facebook Collections brings in a vulnerable version of Guava, so we manage this -->
        <guava.version>33.4.8-jre</guava.version>
        <google.errorprone.version>2.41.0</google.errorprone.version>
        <cdk.version>2.214.0</cdk.version>
        <cdk.kubectl.32.version>2.1.0</cdk.kubectl.32.version>
        <constructs.version>10.4.2</constructs.version>
        <jsii.version>1.113.0</jsii.version>
        <gson.version>2.13.1</gson.version>
        <slf4j.version>2.0.17</slf4j.version>
        <reload4j.version>1.2.26</reload4j.version>
        <aspectj.version>1.9.24</aspectj.version>
        <pty4j.version>0.13.11</pty4j.version>
        <java-websocket.version>1.6.0</java-websocket.version>
        <bouncycastle.version>1.81</bouncycastle.version>
        <athena.version>2025.15.1</athena.version>
        <trino.version>435</trino.version>
        <!-- Trino requires an old version of JGraphT -->
        <trino.jgrapht.version>0.9.2</trino.jgrapht.version>
        <!-- Build module uses Jersey w/Jakarta WS for communicating with GitHub API. -->
        <!-- This is not managed for the whole project as it conflicts with Trino. -->
        <jersey.build.version>2.45</jersey.build.version>
        <jakarta.ws.build.version>2.1.6</jakarta.ws.build.version>
        <!-- Netty version is managed because S3, Athena and Arrow depend on it but use incompatible versions -->
        <netty.version>4.2.5.Final</netty.version>
        <!-- netty-tcnative is a fork of Tomcat Native, and is only used by spark-sql -->
        <netty-tcnative.version>2.0.73.Final</netty-tcnative.version>
        <!-- Versions of Jetty and its dependencies are managed because WireMock and Hadoop use different versions. -->
        <!-- We want to avoid mixing them but they should be compatible. -->
        <jetty.version>11.0.25</jetty.version>
        <jakarta.activation.version>2.1.3</jakarta.activation.version>
        <jakarta.xml.bind.version>2.3.3</jakarta.xml.bind.version>
        <jungrapht-visualization.version>1.4</jungrapht-visualization.version>
        <jgrapht.version>1.5.2</jgrapht.version>
        <apfloat.version>1.14.0</apfloat.version>
        <joda-time.version>2.14.0</joda-time.version>
        <json-smart.version>2.6.0</json-smart.version>
        <jnr.ffi.version>2.2.17</jnr.ffi.version>
        <scijava.native.version>2.5.0</scijava.native.version>
        <!-- Testing -->
        <junit.version>5.13.4</junit.version>
        <junit.platform.version>1.13.4</junit.platform.version>
        <mockito.version>5.19.0</mockito.version>
        <testcontainers.version>1.21.3</testcontainers.version>
        <wiremock.version>3.13.1</wiremock.version>
        <handlebars.version>4.5.0</handlebars.version>
        <assertj.version>3.27.4</assertj.version>
        <hamcrest.version>3.0</hamcrest.version>
        <approvaltests.version>25.0.23</approvaltests.version>
        <json-path.version>2.9.0</json-path.version>
        <xmlunit.version>2.10.3</xmlunit.version>
        <jsonunit.version>4.1.1</jsonunit.version>
        <checkstyle.version>11.0.1</checkstyle.version>
        <sleeper.system.test.short.id />
        <sleeper.system.test.vpc.id />
        <sleeper.system.test.subnet.ids />
        <sleeper.system.test.output.dir />
        <sleeper.system.test.cluster.enabled>false</sleeper.system.test.cluster.enabled>
        <sleeper.system.test.force.redeploy>false</sleeper.system.test.force.redeploy>
        <sleeper.system.test.instances.force.redeploy>false</sleeper.system.test.instances.force.redeploy>
        <sleeper.system.test.force.statestore.classname />
        <sleeper.system.test.standalone.properties.template />
        <sleeper.system.test.instance.properties.overrides />
        <!-- Maven plugins -->
        <checkstyle.plugin.version>3.6.0</checkstyle.plugin.version>
        <release.plugin.version>3.1.1</release.plugin.version>
        <surefire.plugin.version>3.5.3</surefire.plugin.version>
        <failsafe.plugin.version>${surefire.plugin.version}</failsafe.plugin.version>
        <surefire.report.plugin.version>${surefire.plugin.version}</surefire.report.plugin.version>
        <aspectj.plugin.version>1.14.1</aspectj.plugin.version>
        <shade.plugin.version>3.6.0</shade.plugin.version>
        <assembly.plugin.version>3.7.1</assembly.plugin.version>
        <jar.plugin.version>3.4.2</jar.plugin.version>
        <compiler.plugin.version>3.14.0</compiler.plugin.version>
        <enforcer.plugin.version>3.6.1</enforcer.plugin.version>
        <distribution.format>dir</distribution.format>
        <spotbugs.version>4.9.4</spotbugs.version>
        <spotbugs.plugin.version>4.8.3.1</spotbugs.plugin.version>
        <findbugs.version>3.0.2</findbugs.version>
        <dependency.plugin.version>3.8.1</dependency.plugin.version>
        <go-offline.plugin.version>1.2.8</go-offline.plugin.version>
        <dependency-check.plugin.version>12.1.3</dependency-check.plugin.version>
        <site.plugin.version>3.21.0</site.plugin.version>
        <exec.plugin.version>3.5.1</exec.plugin.version>
        <resources.plugin.version>3.3.1</resources.plugin.version>
        <maven.deploy.plugin.version>3.1.4</maven.deploy.plugin.version>
        <!--
        java.nio.Buffer is accessed by Apache Arrow MemoryUtil, used for ingest & athena
        sun.io.ch.DirectBuffer is accessed by Apache Spark StorageUtils, used in the bulk import job runner
        java.util.AbstractList is accessed by Apache Spark KryoSerializer, used in the bulk import job runner
        java.lang.invoke.SerializedLambda is accessed by Apache Spark KryoSerializer, used in the bulk import job runner

        See also https://arrow.apache.org/docs/java/install.html
        "When using Java 17 or later, some JDK internals must be exposed by adding add-opens=java.base/java.nio=ALL-UNNAMED.
        Otherwise, you may see errors like module java.base does not "opens java.nio" to unnamed module."
        -->
        <module.access.args>
            --add-opens java.base/java.nio=ALL-UNNAMED
            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.lang.invoke=ALL-UNNAMED
        </module.access.args>
        <!--  This is required for later correct replacement of argLine -->
        <argLine />
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${findbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.pty4j</groupId>
                <artifactId>pty4j</artifactId>
                <version>${pty4j.version}</version>
            </dependency>
            <!-- AWS CDK -->
            <dependency>
                <groupId>software.amazon.awscdk</groupId>
                <artifactId>aws-cdk-lib</artifactId>
                <version>${cdk.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awscdk</groupId>
                <artifactId>cdk-lambda-layer-kubectl-v32</artifactId>
                <version>${cdk.kubectl.32.version}</version>
            </dependency>
            <dependency>
                <groupId>software.constructs</groupId>
                <artifactId>constructs</artifactId>
                <version>${constructs.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.jsii</groupId>
                <artifactId>jsii-runtime</artifactId>
                <version>${jsii.version}</version>
            </dependency>
            <!-- AWS SDK -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-core</artifactId>
                <version>${aws-lambda-java-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-lambda-java-events</artifactId>
                <version>${aws-lambda-java-events.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.lambda</groupId>
                <artifactId>powertools-metrics</artifactId>
                <version>${aws-lambda-powertools.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>auth</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>s3</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>s3-transfer-manager</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>dynamodb</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>sqs</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>sts</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>ecr</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>cloudwatch</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>cloudwatchevents</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>cloudwatchlogs</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>cloudformation</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>lambda</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>ec2</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>autoscaling</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>ecs</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>emr</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>emrserverless</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>apache-client</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk.crt</groupId>
                <artifactId>aws-crt</artifactId>
                <version>${aws-crt.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>sfn</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>apigatewaymanagementapi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>sdk-core</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>metrics-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>http-auth</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>regions</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>aws-json-protocol</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>http-auth-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>endpoints-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>json-utils</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>utils</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>identity-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>annotations</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>http-client-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>http-auth-aws</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>retries-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>protocol-core</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>aws-core</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>profiles</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>checksums</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>checksums-spi</artifactId>
                <version>${aws-java-sdk-v2.version}</version>
            </dependency>
            <!-- Data processing -->
            <dependency>
                <groupId>com.joom.spark</groupId>
                <artifactId>spark-platform_${scala.version}</artifactId>
                <version>${joom.spark.platform.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.spark</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-slf4j2-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.orc</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.arrow</groupId>
                        <artifactId>arrow-memory-netty</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-kubernetes_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>netty-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-aws</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>software.amazon.awssdk</groupId>
                        <artifactId>bundle</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-hadoop</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-column</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-encoding</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-format-structures</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-jackson</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.datasketches</groupId>
                <artifactId>datasketches-java</artifactId>
                <version>${datasketches.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-vector</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-memory-core</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-memory-unsafe</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-memory-netty</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-algorithm</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.arrow</groupId>
                <artifactId>arrow-format</artifactId>
                <version>${arrow.version}</version>
            </dependency>
            <!-- Shared dependencies -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.minor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.minor.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-nio-client</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-classes-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-classes-kqueue</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-unix-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
                <classifier>linux-aarch_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <version>${netty.version}</version>
                <classifier>osx-aarch_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <version>${netty.version}</version>
                <classifier>osx-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-boringssl-static</artifactId>
                <version>${netty-tcnative.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlets</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-security</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-proxy</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-continuation</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util-ajax</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-xml</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-java-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-alpn-java-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-common</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-hpack</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.http2</groupId>
                <artifactId>http2-http-client-transport</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-core</artifactId>
                <version>${xmlunit.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.activation</groupId>
                <artifactId>jakarta.activation-api</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client-runtime</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client-api</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.openssl</groupId>
                <artifactId>wildfly-openssl</artifactId>
                <version>${wildfly-openssl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.common</groupId>
                <artifactId>wildfly-common</artifactId>
                <version>${wildfly-common.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.woodstox</groupId>
                <artifactId>woodstox-core</artifactId>
                <version>${woodstox.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.woodstox</groupId>
                <artifactId>stax2-api</artifactId>
                <version>${woodstox.stax2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.ivy</groupId>
                <artifactId>ivy</artifactId>
                <version>${ivy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>aircompressor</artifactId>
                <version>${aircompressor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-ipc</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-mapred</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kerby</groupId>
                <artifactId>kerb-core</artifactId>
                <version>${kerby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kerby</groupId>
                <artifactId>kerb-simplekdc</artifactId>
                <version>${kerby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kerby</groupId>
                <artifactId>kerb-crypto</artifactId>
                <version>${kerby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kerby</groupId>
                <artifactId>kerby-pkix</artifactId>
                <version>${kerby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kerby</groupId>
                <artifactId>kerby-util</artifactId>
                <version>${kerby.version}</version>
            </dependency>
            <dependency>
                <groupId>dnsjava</groupId>
                <artifactId>dnsjava</artifactId>
                <version>${dnsjava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.tukaani</groupId>
                <artifactId>xz</artifactId>
                <version>${xz.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp-urlconnection</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>logging-interceptor</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-common</artifactId>
                <version>${kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.okio</groupId>
                <artifactId>okio-jvm</artifactId>
                <version>${okio.version}</version>
            </dependency>
            <dependency>
                <groupId>org.roaringbitmap</groupId>
                <artifactId>RoaringBitmap</artifactId>
                <version>${roaringbitmap.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${google.errorprone.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomnelson</groupId>
                <artifactId>jungrapht-visualization</artifactId>
                <version>${jungrapht-visualization.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomnelson</groupId>
                <artifactId>jungrapht-visualization-samples</artifactId>
                <version>${jungrapht-visualization.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomnelson</groupId>
                <artifactId>jungrapht-layout</artifactId>
                <version>${jungrapht-visualization.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-core</artifactId>
                <version>${jgrapht.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-guava</artifactId>
                <version>${jgrapht.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgrapht</groupId>
                <artifactId>jgrapht-io</artifactId>
                <version>${jgrapht.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apfloat</groupId>
                <artifactId>apfloat</artifactId>
                <version>${apfloat.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${json-smart.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jknack</groupId>
                <artifactId>handlebars</artifactId>
                <version>${handlebars.version}</version>
            </dependency>
            <!-- Apache commons -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>commons-compiler</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient4</artifactId>
                <version>${httpclient4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents.client5</groupId>
                <artifactId>httpclient5</artifactId>
                <version>${httpclient5.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jline</groupId>
                <artifactId>jline</artifactId>
                <version>${jline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${jetbrains-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.paranamer</groupId>
                <artifactId>paranamer</artifactId>
                <version>${paranamer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.luben</groupId>
                <artifactId>zstd-jni</artifactId>
                <version>${zstd-jni.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>units</artifactId>
                <version>${airlift.units.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>slice</artifactId>
                <version>${airlift.slice.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>http-client</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>json</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>node</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>log</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>configuration</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>stats</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>concurrent</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.airlift</groupId>
                <artifactId>security</artifactId>
                <version>${airlift.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-context</artifactId>
                <version>${opentelemetry.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jol</groupId>
                <artifactId>jol-core</artifactId>
                <version>${jol.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <!-- GSON -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- Jackson JSON processing -->
            <!-- Used by (potentially non-exhaustive):
            Facebook JCommon
            Testcontainers, via Docker Java API
            AWS SDK
            Apache Spark
            -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_${scala.version}</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-jaxb-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-base</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.reload4j</groupId>
                <artifactId>reload4j</artifactId>
                <version>${reload4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-reload4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- Cryptography -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcutil-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <!-- Test Dependencies -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>localstack</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite</artifactId>
                <version>${junit.platform.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>com.approvaltests</groupId>
                <artifactId>approvaltests</artifactId>
                <version>${approvaltests.version}</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.json-unit</groupId>
                <artifactId>json-unit-assertj</artifactId>
                <version>${jsonunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <distributionManagement>
        <site>
            <id>sleeper</id>
            <name>Sleeper site</name>
            <url>file:///tmp/sleeper/site</url>
        </site>
    </distributionManagement>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>aggregated</id>
                        <inherited>false</inherited>
                        <reports>
                            <report>report-only</report>
                            <report>failsafe-report-only</report>
                        </reports>
                        <configuration>
                            <aggregate>true</aggregate>
                        </configuration>
                    </reportSet>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <id>aggregate</id>
                        <inherited>false</inherited>
                        <reports>
                            <report>checkstyle-aggregate</report>
                        </reports>
                        <configuration>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                    </reportSet>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <failsOnError>false</failsOnError>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>analyze-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoreUnusedRuntime>true</ignoreUnusedRuntime>
                            <ignoredUsedUndeclaredDependencies>*:*:*:*</ignoredUsedUndeclaredDependencies>
                            <ignoredUnusedDeclaredDependencies>
                                <!-- Dependency plugin does not detect usages of Scala classes reliably, e.g. com.joom.spark.ExplicitRepartitionStrategy$ -->
                                <ignoredUnusedDeclaredDependency>com.joom.spark:spark-platform_${scala.version}::</ignoredUnusedDeclaredDependency>
                                <!-- For modules with no tests, e.g. system-test-cdk -->
                                <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-api::</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.assertj:assertj-core::</ignoredUnusedDeclaredDependency>
                                <!-- For modules using test suites, e.g. system-test-suite -->
                                <ignoredUnusedDeclaredDependency>org.junit.platform:junit-platform-suite::</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter-engine::</ignoredUnusedDeclaredDependency>
                                <!-- For Trino -->
                                <ignoredUnusedDeclaredDependency>io.trino:trino-plugin-toolkit::</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.junit.vintage:junit-vintage-engine::</ignoredUnusedDeclaredDependency>
                                <!-- Hadoop client sets many exclusions in hadoop-common dependency, so we don't want to redeclare that -->
                                <ignoredUnusedDeclaredDependency>org.apache.hadoop:hadoop-client::</ignoredUnusedDeclaredDependency>
                                <ignoredUnusedDeclaredDependency>org.apache.hadoop:hadoop-aws::</ignoredUnusedDeclaredDependency>
                                <!-- AspectJ wants to be declared as a compile dependency -->
                                <ignoredUnusedDeclaredDependency>org.aspectj:aspectjrt::</ignoredUnusedDeclaredDependency>
                                <!-- Ignored due to false positive for dependency in localstack-test -->
                                <ignoredUnusedDeclaredDependency>com.github.tomakehurst:wiremock-jre8::</ignoredUnusedDeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                            <ignoreAllNonTestScoped>true</ignoreAllNonTestScoped>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${release.plugin.version}</version>
                <configuration>
                    <arguments>-Pquick</arguments>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <parallel>classesAndMethods</parallel>
                    <threadCount>10</threadCount>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforcer-checks</id>
                        <phase>install</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <bannedDependencies>
                            <excludes>
                                <exclude>*log4j*:*log4j*</exclude>
                                <exclude>org.slf4j:slf4j-log4j12</exclude>
                            </excludes>
                            <includes>
                                <include>org.apache.logging.log4j:*</include>
                            </includes>
                            <message>Log4j conflicts with reload4j, add an exclusion</message>
                        </bannedDependencies>
                        <dependencyConvergence />
                        <banDuplicatePomDependencyVersions />
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.qaware.maven</groupId>
                <artifactId>go-offline-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>fat-jar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <shadedArtifactAttached>true</shadedArtifactAttached>
                                <shadedClassifierName>utility</shadedClassifierName>
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                                <artifactSet>
                                    <excludes>
                                    </excludes>
                                </artifactSet>
                                <transformers>
                                    <!--
                                    This is needed to merge META-INFO/services/org.apache.hadoop.fs.FileSystem, which
                                    is provided by different libraries.

                                    Otherwise depending on the order Maven processes the jars, sometimes it takes the
                                    version of this file from hadoop-aws, which only declares
                                    org.apache.hadoop.fs.s3native.NativeS3FileSystem. This prevents Hadoop from loading
                                    the local file system, and we see errors like this:

                                    org.apache.hadoop.fs.UnsupportedFileSystemException: No FileSystem for scheme "file"

                                    This is only strictly needed for modules that use Hadoop, but in practice this is
                                    most fat jars.
                                    -->
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                </transformers>
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>distro-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler.plugin.version}</version>
                    <configuration>
                        <release>${java.version}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.plugin.version}</version>
                    <configuration>
                        <configLocation>../code-style/checkstyle.xml</configLocation>
                        <suppressionsLocation>
                            ../code-style/checkstyle-suppressions.xml
                        </suppressionsLocation>
                        <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <headerLocation>../code-style/licenseHeader.txt</headerLocation>
                        <excludes>**/generated/**/*</excludes>
                        <sourceDirectories>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                        </sourceDirectories>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>test</phase>
                            <configuration>
                                <configLocation>../code-style/checkstyle.xml</configLocation>
                                <consoleOutput>true</consoleOutput>
                                <failsOnError>true</failsOnError>
                                <headerLocation>../code-style/licenseHeader.txt</headerLocation>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.plugin.version}</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <xmlOutput>true</xmlOutput>
                        <spotbugsXmlOutputDirectory>
                            ${project.build.directory}/spotbugs
                        </spotbugsXmlOutputDirectory>
                        <onlyAnalyze>sleeper.-</onlyAnalyze>
                        <excludeFilterFile>
                            ../code-style/spotbugs-exclude.xml
                        </excludeFilterFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>test</phase>
                            <configuration>
                                <effort>Max</effort>
                                <threshold>Low</threshold>
                                <xmlOutput>true</xmlOutput>
                                <spotbugsXmlOutputDirectory>
                                    ${project.build.directory}/spotbugs
                                </spotbugsXmlOutputDirectory>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.plugin.version}</version>
                    <configuration>
                        <argLine>@{argLine} ${module.access.args}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.plugin.version}</version>
                    <configuration>
                        <argLine>@{argLine} ${module.access.args}</argLine>
                        <systemProperties>
                            <property>
                                <name>sleeper.system.test.short.id</name>
                                <value>${sleeper.system.test.short.id}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.vpc.id</name>
                                <value>${sleeper.system.test.vpc.id}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.subnet.ids</name>
                                <value>${sleeper.system.test.subnet.ids}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.output.dir</name>
                                <value>${sleeper.system.test.output.dir}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.cluster.enabled</name>
                                <value>${sleeper.system.test.cluster.enabled}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.force.redeploy</name>
                                <value>${sleeper.system.test.force.redeploy}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.instances.force.redeploy</name>
                                <value>${sleeper.system.test.instances.force.redeploy}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.force.statestore.classname</name>
                                <value>${sleeper.system.test.force.statestore.classname}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.standalone.properties.template</name>
                                <value>${sleeper.system.test.standalone.properties.template}</value>
                            </property>
                            <property>
                                <name>sleeper.system.test.instance.properties.overrides</name>
                                <value>${sleeper.system.test.instance.properties.overrides}</value>
                            </property>
                        </systemProperties>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${surefire.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>de.qaware.maven</groupId>
                    <artifactId>go-offline-maven-plugin</artifactId>
                    <version>${go-offline.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check.plugin.version}</version>
                    <configuration>
                        <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                        <suppressionFile>../code-style/dependency-check-suppressions.xml</suppressionFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>dev.aspectj</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <version>${aspectj.plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <complianceLevel>${java.version}</complianceLevel>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.aspectj</groupId>
                            <artifactId>aspectjtools</artifactId>
                            <version>${aspectj.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>quick</id>
            <properties>
                <skipTests>true</skipTests>
                <skipITs>true</skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>style</id>
            <properties>
                <skipTests>true</skipTests>
                <skipITs>true</skipITs>
            </properties>
        </profile>
        <profile>
            <id>skipShade</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-shade-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>fat-jar</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>distro-assembly</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>skipSpotBugs</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs-maven-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>validate</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>skipDependencies</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>analyze</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>systemTest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>QuickSystemTestSuite</include>
                            </includes>
                            <parallel>none</parallel>
                            <forkedProcessTimeoutInSeconds>0</forkedProcessTimeoutInSeconds>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-shade-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>fat-jar</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>distro-assembly</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>runIT</id>
            <activation>
                <property>
                    <name>runIT</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>${runIT}</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>cleanForSite</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>checkstyle**</include>
                                        <include>spotbugs/**</include>
                                        <include>spotbugs.xml</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
